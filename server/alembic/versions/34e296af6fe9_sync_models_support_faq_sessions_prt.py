"""sync models (support, faq, sessions, prt)

Revision ID: 34e296af6fe9
Revises: 0006_merge
Create Date: 2025-08-26 21:15:38.993347

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '34e296af6fe9'
down_revision = '0006_merge'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faq_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('support_tickets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('open', 'pending', 'closed', name='ticketstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_support_tickets_user_id'), 'support_tickets', ['user_id'], unique=False)
    op.create_table('faq_articles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['faq_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('ticket_id', sa.UUID(), nullable=False),
    sa.Column('author', sa.Enum('user', 'support', name='messageauthor'), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['ticket_id'], ['support_tickets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_support_messages_ticket_id'), 'support_messages', ['ticket_id'], unique=False)
    op.add_column('device_photos', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('device_photos', 'file_url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('device_photos', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('ix_device_photos_device_id'), table_name='device_photos')
    op.drop_constraint(op.f('device_photos_device_id_fkey'), 'device_photos', type_='foreignkey')
    op.create_foreign_key(None, 'device_photos', 'devices', ['device_id'], ['id'])
    op.alter_column('devices', 'user_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('devices', 'brand',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('devices', 'model',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('devices', 'serial_number',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('devices', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('devices', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('ix_devices_serial_number'), table_name='devices')
    op.drop_index(op.f('ix_devices_user_id'), table_name='devices')
    op.create_unique_constraint(None, 'devices', ['serial_number'])
    op.drop_constraint(op.f('devices_user_id_fkey'), 'devices', type_='foreignkey')
    op.create_foreign_key(None, 'devices', 'users', ['user_id'], ['id'])
    op.add_column('password_reset_tokens', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('password_reset_tokens', 'token',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_password_reset_tokens_user_id'), 'password_reset_tokens', ['user_id'], unique=False)
    op.add_column('sessions', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('sessions', 'refresh_token',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False,
               postgresql_using='refresh_token::text')
    op.alter_column('sessions', 'user_agent',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True,
               postgresql_using='user_agent::text')
    op.alter_column('sessions', 'ip',
               existing_type=postgresql.INET(),
               type_=sa.String(),
               existing_nullable=True,
               postgresql_using='ip::text')
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.create_index(op.f('ix_sessions_user_id'), 'sessions', ['user_id'], unique=False)
    op.add_column('subscriptions', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('subscriptions', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.add_column('ticket_attachments', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    # op.drop_column('ticket_attachments', 'file_type')
    op.add_column('ticket_status_history', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('ticket_status_history', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.drop_index(op.f('ix_ticket_history_ticket_changed'), table_name='ticket_status_history')
    op.drop_column('ticket_status_history', 'changed_at')
    op.alter_column('tickets', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False,
               postgresql_using='left(title, 255)')
    op.alter_column('tickets', 'status',
               existing_type=postgresql.ENUM('accepted', 'in_progress', 'done', 'rejected', name='ticket_status_t'),
               server_default=None,
               existing_nullable=False)
    op.drop_index(op.f('ix_tickets_created_desc'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_device'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_user_status'), table_name='tickets')
    op.drop_constraint(op.f('tickets_device_id_fkey'), 'tickets', type_='foreignkey')
    op.drop_constraint(op.f('tickets_user_id_fkey'), 'tickets', type_='foreignkey')
    op.create_foreign_key(None, 'tickets', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'tickets', 'devices', ['device_id'], ['id'])
    # op.drop_column('tickets', 'closed_at')
    op.execute("UPDATE users SET phone = COALESCE(phone, CONCAT('TMP-', substr(id::text,1,8)))")
    op.execute("UPDATE users SET name = COALESCE(name, '')")
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=postgresql.CITEXT(),
               type_=sa.String(),
               nullable=True,
               postgresql_using='email::text')
    op.alter_column('users', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('users', 'status',
               existing_type=postgresql.ENUM('ghost', 'active', name='user_status_t'),
               server_default='active',
               existing_nullable=False)
    op.alter_column('users', 'has_subscription',
               existing_type=sa.BOOLEAN(),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               existing_nullable=False)
    op.create_unique_constraint(None, 'users', ['phone'])
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('users', 'has_subscription',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('users', 'status',
               existing_type=postgresql.ENUM('ghost', 'active', name='user_status_t'),
               server_default=sa.text("'ghost'::user_status_t"),
               existing_nullable=False)
    op.alter_column('users', 'name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(),
               type_=postgresql.CITEXT(),
               nullable=False)
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('tickets', sa.Column('closed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.drop_constraint(None, 'tickets', type_='foreignkey')
    op.create_foreign_key(op.f('tickets_user_id_fkey'), 'tickets', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('tickets_device_id_fkey'), 'tickets', 'devices', ['device_id'], ['id'], ondelete='SET NULL')
    op.create_index(op.f('ix_tickets_user_status'), 'tickets', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_tickets_device'), 'tickets', ['device_id'], unique=False)
    op.create_index(op.f('ix_tickets_created_desc'), 'tickets', ['created_at'], unique=False)
    op.alter_column('tickets', 'status',
               existing_type=postgresql.ENUM('accepted', 'in_progress', 'done', 'rejected', name='ticket_status_t'),
               server_default=sa.text("'accepted'::ticket_status_t"),
               existing_nullable=False)
    op.alter_column('tickets', 'title',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('ticket_status_history', sa.Column('changed_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_index(op.f('ix_ticket_history_ticket_changed'), 'ticket_status_history', ['ticket_id', 'changed_at'], unique=False)
    op.drop_column('ticket_status_history', 'updated_at')
    op.drop_column('ticket_status_history', 'created_at')
    op.add_column('ticket_attachments', sa.Column('file_type', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('ticket_attachments', 'updated_at')
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    op.drop_column('subscriptions', 'updated_at')
    op.drop_column('subscriptions', 'created_at')
    op.drop_index(op.f('ix_sessions_user_id'), table_name='sessions')
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('sessions', 'ip',
               existing_type=sa.String(),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('sessions', 'user_agent',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('sessions', 'refresh_token',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('sessions', 'updated_at')
    op.drop_index(op.f('ix_password_reset_tokens_user_id'), table_name='password_reset_tokens')
    op.alter_column('password_reset_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('password_reset_tokens', 'token',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('password_reset_tokens', 'updated_at')
    op.drop_constraint(None, 'devices', type_='foreignkey')
    op.create_foreign_key(op.f('devices_user_id_fkey'), 'devices', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'devices', type_='unique')
    op.create_index(op.f('ix_devices_user_id'), 'devices', ['user_id'], unique=False)
    op.create_index(op.f('ix_devices_serial_number'), 'devices', ['serial_number'], unique=False)
    op.alter_column('devices', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('devices', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('devices', 'serial_number',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'model',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'brand',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'user_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_constraint(None, 'device_photos', type_='foreignkey')
    op.create_foreign_key(op.f('device_photos_device_id_fkey'), 'device_photos', 'devices', ['device_id'], ['id'], ondelete='CASCADE')
    op.create_index(op.f('ix_device_photos_device_id'), 'device_photos', ['device_id'], unique=False)
    op.alter_column('device_photos', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               existing_nullable=False)
    op.alter_column('device_photos', 'file_url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('device_photos', 'updated_at')
    op.drop_index(op.f('ix_support_messages_ticket_id'), table_name='support_messages')
    op.drop_table('support_messages')
    op.drop_table('faq_articles')
    op.drop_index(op.f('ix_support_tickets_user_id'), table_name='support_tickets')
    op.drop_table('support_tickets')
    op.drop_table('faq_categories')
    # ### end Alembic commands ###